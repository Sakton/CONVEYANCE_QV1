
/*
NO ACTION
Выдать ошибку, показывающую, что при удалении или изменении записи произойдёт нарушение ограничения внешнего ключа. Для отложенных ограничений ошибка произойдёт в момент проверки ограничения, если строки, ссылающиеся на эту запись, по-прежнему будут существовать. Этот вариант действия подразумевается по умолчанию.
RESTRICT
Выдать ошибку, показывающую, что при удалении или изменении записи произойдёт нарушение ограничения внешнего ключа. Этот вариант подобен NO ACTION, но эта проверка будет неоткладываемой.
CASCADE
Удалить все строки, ссылающиеся на удаляемую запись, либо поменять значения в ссылающихся столбцах на новые значения во внешних столбцах, в соответствии с операцией.
SET NULL
Установить ссылающиеся столбцы равными NULL.
SET DEFAULT
Установить в ссылающихся столбцах значения по умолчанию. (Если эти значения не равны NULL, во внешней таблице должна быть строка, соответствующая набору значений по умолчанию; в противном случае операция завершится ошибкой.)

*/


CREATE DATABASE demo_coveyance_db;

-- CREATE TYPE type_names_attributes AS ( name varchar(256) );

--VATS
CREATE TABLE vats (
	vat_id SERIAL,
	vat_stavka decimal(4, 2) NOT NULL UNIQUE,
	CONSTRAINT vats_valid CHECK ( vat_stavka > 0 AND vat_stavka < 100 ),
	PRIMARY KEY ( vat_id )
);

-- ALTER TABLE vats ADD PRIMARY KEY ( vat_id );
-- ALTER TABLE vats ADD UNIQUE ( vat_stavka );

INSERT INTO vats ( vat_stavka )
VALUES ( 15 ), ( 18 ), ( 19 ), ( 20 ), ( 21 ), ( 23 ), ( 25 ), ( 27 );

SELECT * FROM vats;

SELECT vat_stavka FROM vats;

SELECT vat_stavka FROM vats
ORDER BY vat_stavka;

SELECT vat_stavka FROM vats
ORDER BY vat_stavka DESC;

--testes
INSERT INTO vats ( vat_stavka )
VALUES (-1); -- + ERROR RANGE

--CITIES
CREATE TABLE sities (
	city_id SERIAL,
	city_name VARCHAR( 256 ) NOT NULL UNIQUE,
	PRIMARY KEY ( city_id )
);



-- ALTER TABLE sities ADD PRIMARY KEY ( city_id );
-- ALTER TABLE sities ADD UNIQUE ( city_name );

INSERT INTO sities ( city_name )
VALUES ( 'Nürnberg-Hafen' ),
	   ( 'Frankfurt(Oder)'),
	   ( 'Hamburg' ),
	   ( 'Isernhagen' ),
	   ( 'Fuldabrück' ),
	   ( 'Göttingen' );
	   
INSERT INTO sities ( city_name )
VALUES ( 'Göttingen' );
	   
SELECT * FROM sities; --ERROR UNIQ

-- ALTER TABLE sities ALTER COLUMN city_name TYPE type_names_attributes 
-- USING SET city_name;

-- DISTRICTS
/*
CREATE TABLE districts (
	district_id SERIAL,
	district_name VARCHAR(256) NOT NULL
);

INSERT INTO districts ( district_name ) 
VALUES ();
*/
-- STRDETS

CREATE TABLE streets (
	street_id SERIAL,
	street_name varchar ( 256 ) NOT NULL
);

-- ALTER TABLE streets ADD PRIMARY KEY (street_id);

INSERT INTO streets ( street_name )
VALUES (' Rotterdamer Straße'),
	   ( 'Goepelstrasse' ),
	   ( 'Reichenstraße' ),
	   ( 'Werner-Siemens-Str.' ),
	   ( 'Rahlstedter Str.' ),
	   ( 'Owiedenfeldstrase' );

-- LOCALITYS -- ???
/*
CREATE TABLE localitys ( 
	locality_id SERIAL,
	locality_name varchar( 256 ) UNIQUE
);
*/

CREATE TABLE countrys (
	country_id SERIAL,
	vat_id int NOT NULL,
	country_name varchar(256) NOT NULL UNIQUE,
	country_abbreviated char(4) NOT NULL UNIQUE,
	PRIMARY KEY ( country_id ),
	FOREIGN KEY ( vat_id ) REFERENCES vats ( vat_id )
	ON UPDATE SET NULL ON DELETE SET NULL
);

-- ALTER TABLE countrys ADD COLUMN country_abbreviated char(4) NOT NULL UNIQUE;
ALTER TABLE RENAME COLUMN country_abbreviated TO country_abbreviated_2;

CREATE OR REPLACE FUNCTION get_vat_id ( vat_st DECIMAL ) RETURNS INT AS
	' SELECT vat_id FROM vats WHERE vat_stavka = vat_st; '
LANGUAGE SQL;

SELECT get_vat_id (20);

INSERT INTO countrys ( vat_id, country_name, country_abbreviated )
VALUES ( ( SELECT get_vat_id (20) ), 'Австрия', 'AT' );

INSERT INTO countrys ( vat_id, country_name, country_abbreviated )
VALUES ( ( SELECT get_vat_id (20) ), 'Белоруссия', 'BY' ),
	   ( ( SELECT get_vat_id (21) ), 'Бельгия', 'BE' ),
	   ( ( SELECT get_vat_id (27) ), 'Венгрия', 'HU' );

SELECT * FROM countrys;























